Gold$X33..At.the.peak.of.my.interest..I.practiced.___.hours.per.day.on.my.primary.instrument.[Gold$X33..At.the.peak.of.my.interest..I.practiced.___.hours.per.day.on.my.primary.instrument.=='0'] <- 1
Gold$X33..At.the.peak.of.my.interest..I.practiced.___.hours.per.day.on.my.primary.instrument. <- as.numeric(Gold$X33..At.the.peak.of.my.interest..I.practiced.___.hours.per.day.on.my.primary.instrument.)
#Q32
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='10 or more'] <- 7
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='9-Jun'] <- 6
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='5-Apr'] <- 5
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='3'] <- 4
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='2'] <- 3
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='1'] <- 2
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.[Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.=='0'] <- 1
Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years. <- as.numeric(Gold$X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years.)
#Q34
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='11 or more'] <- 7
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='10-Jul'] <- 6
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='6-Apr'] <- 5
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='3'] <- 4
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='2'] <- 3
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='1'] <- 2
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.[Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.=='0'] <- 1
Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months. <- as.numeric(Gold$X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months.)
#Q35
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='7 or more'] <- 7
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='6-Apr'] <- 6
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='3'] <- 5
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='2'] <- 4
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='1'] <- 3
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='0.5'] <- 2
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years[Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years=='0'] <- 1
Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years <- as.numeric(Gold$X35..I.have.had.formal.training.in.music.theory.for.__.years)
#Q36
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='10 or more'] <- 7
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='9-Jun'] <- 6
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='5-Mar'] <- 5
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='2'] <- 4
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='1'] <- 3
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='0.5'] <- 2
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.[Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.=='0'] <- 1
Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime. <- as.numeric(Gold$X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime.)
#Q37
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='6 or more'] <- 7
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='5'] <- 6
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='4'] <- 5
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='3'] <- 4
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='2'] <- 3
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='1'] <- 2
Gold$X37..I.can.play.___.musical.instruments[Gold$X37..I.can.play.___.musical.instruments=='0'] <- 1
Gold$X37..I.can.play.___.musical.instruments <- as.numeric(Gold$X37..I.can.play.___.musical.instruments)
#Q38
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='4 hours or more'] <- 7
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='2-3 hours'] <- 6
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='2 hours'] <- 5
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='60-90 minutes'] <- 4
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='30-60 minutes'] <- 3
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='15-30 minutes'] <- 2
Gold$X38..I.listen.attentively.to.music.for.___.per.day.[Gold$X38..I.listen.attentively.to.music.for.___.per.day.=='0-15 minutes'] <- 1
Gold$X38..I.listen.attentively.to.music.for.___.per.day. <- as.numeric(Gold$X38..I.listen.attentively.to.music.for.___.per.day.)
# GoldMSI columns to reverse code and sub-score (for these questions, the correct answer (ie the more positive answer) is a higher number. Negative questions are reverse coded.)
cols_reverse <- c("X21..I.don.t.spend.much.of.my.disposable.income.on.music....Completely.Disagree.Completely.Agree" ,
"X11..I.find.it.difficult.to.spot.mistakes.in.a.performance.of.a.song.even.if.I.know.the.tune....Completely.Disagree.Completely.Agree" ,
"X13..I.have.trouble.recognizing.a.familiar.song.when.played.in.a.different.way.or.by.a.different.performer....Completely.Disagree.Completely.Agree" ,
"X23..When.I.sing..I.have.no.idea.whether.I.m.in.tune.or.not....Completely.Disagree.Completely.Agree" ,
"X14..I.have.never.been.complimented.for.my.talents.as.a.musical.performer....Completely.Disagree.Completely.Agree" ,
"X27..I.would.not.consider.myself.a.musician....Completely.Disagree.Completely.Agree" ,
"X17..I.am.not.able.to.sing.in.harmony.when.somebody.is.singing.a.familiar.tune....Completely.Disagree.Completely.Agree" ,
"X25..I.don.t.like.singing.in.public.because.I.m.afraid.that.I.would.sing.wrong.notes....Completely.Disagree.Completely.Agree" ,
"X9..Pieces.of.music.rarely.evoke.emotions.for.me....Completely.Disagree.Completely.Agree")
cols_activeengagement <- c("X1..I.spend.a.lot.of.my.free.time.doing.music.related.activities....Completely.Disagree.Completely.Agree" ,
"X3..I.enjoy.writing.about.music..for.example.on.blogs.and.forums....Completely.Disagree.Completely.Agree" ,
"X8..I.m.intrigued.by.musical.styles.I.m.not.familiar.with.and.want.to.find.out.more....Completely.Disagree.Completely.Agree" ,
"X15..I.often.read.or.search.the.internet.for.things.related.to.music....Completely.Disagree.Completely.Agree" ,
"X21..I.don.t.spend.much.of.my.disposable.income.on.music....Completely.Disagree.Completely.Agree" ,
"X24..Music.is.kind.of.an.addiction.for.me...I.couldn.t.live.without.it....Completely.Disagree.Completely.Agree" ,
"X28..I.keep.track.of.new.music.that.I.come.across..e.g..new.artists.or.recordings.....Completely.Disagree.Completely.Agree" ,
"X34..I.have.attended.___.live.music.events.as.an.audience.member.in.the.past.twelve.months." ,
"X38..I.listen.attentively.to.music.for.___.per.day.")
cols_perceptualabilities <- c("X5..I.am.able.to.judge.whether.someone.is.a.good.singer.or.not....Completely.Disagree.Completely.Agree" ,
"X6..I.usually.know.when.I.m.hearing.a.song.for.the.first.time....Completely.Disagree.Completely.Agree" , "X11..I.find.it.difficult.to.spot.mistakes.in.a.performance.of.a.song.even.if.I.know.the.tune....Completely.Disagree.Completely.Agree" ,
"X12..I.can.compare.and.discuss.differences.between.two.performances.or.versions.of.the.same.piece.of.music....Completely.Disagree.Completely.Agree" ,
"X13..I.have.trouble.recognizing.a.familiar.song.when.played.in.a.different.way.or.by.a.different.performer....Completely.Disagree.Completely.Agree" ,
"X18..I.can.tell.when.people.sing.or.play.out.of.time.with.the.beat....Completely.Disagree.Completely.Agree" ,
"X22..I.can.tell.when.people.sing.or.play.out.of.tune....Completely.Disagree.Completely.Agree" ,
"X23..When.I.sing..I.have.no.idea.whether.I.m.in.tune.or.not....Completely.Disagree.Completely.Agree" ,
"X26..When.I.hear.a.music.I.can.usually.identify.its.genre....Completely.Disagree.Completely.Agree")
cols_musicaltraining <- c("X14..I.have.never.been.complimented.for.my.talents.as.a.musical.performer....Completely.Disagree.Completely.Agree" , "X27..I.would.not.consider.myself.a.musician....Completely.Disagree.Completely.Agree",
"X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years." ,
"X33..At.the.peak.of.my.interest..I.practiced.___.hours.per.day.on.my.primary.instrument." , ## think about how this is scored? doesn't seem like a lot of people answered
"X35..I.have.had.formal.training.in.music.theory.for.__.years" ,
"X36..I.have.had.__.years.of.formal.training.on.a.musical.instrument..including.voice..during.my.lifetime." ,
"X37..I.can.play.___.musical.instruments")
cols_singingabilities <- c("X4..If.somebody.starts.singing.a.song.I.don.t.know..I.can.usually.join.in....Completely.Disagree.Completely.Agree" ,
"X7..I.can.sing.or.play.music.from.memory....Completely.Disagree.Completely.Agree" ,
"X10..I.am.able.to.hit.the.right.notes.when.I.sing.along.with.a.recording....Completely.Disagree.Completely.Agree" ,
"X17..I.am.not.able.to.sing.in.harmony.when.somebody.is.singing.a.familiar.tune....Completely.Disagree.Completely.Agree" ,
"X25..I.don.t.like.singing.in.public.because.I.m.afraid.that.I.would.sing.wrong.notes....Completely.Disagree.Completely.Agree" ,
"X29..After.hearing.a.new.song.two.or.three.times..I.can.usually.sing.it.by.myself....Completely.Disagree.Completely.Agree" ,
"X30..I.only.need.to.hear.a.new.tune.once.and.I.can.sing.it.back.hours.later....Completely.Disagree.Completely.Agree")
cols_emotion <- c("X2..I.sometimes.choose.music.that.can.trigger.shivers.down.my.spine....Completely.Disagree.Completely.Agree" ,
"X9..Pieces.of.music.rarely.evoke.emotions.for.me....Completely.Disagree.Completely.Agree" ,
"X16..I.often.pick.certain.music.to.motivate.or.excite.me....Completely.Disagree.Completely.Agree" ,
"X19..I.am.able.to.identify.what.is.special.about.a.given.musical.piece....Completely.Disagree.Completely.Agree" ,
"X20..I.am.able.to.talk.about.the.emotions.that.a.piece.of.music.evokes.for.me....Completely.Disagree.Completely.Agree" ,
"X31..Music.can.evoke.my.memories.of.past.people.and.places....Completely.Disagree.Completely.Agree")
cols_musicalsophistication <- c("X1..I.spend.a.lot.of.my.free.time.doing.music.related.activities....Completely.Disagree.Completely.Agree" ,
"X3..I.enjoy.writing.about.music..for.example.on.blogs.and.forums....Completely.Disagree.Completely.Agree" ,
"X4..If.somebody.starts.singing.a.song.I.don.t.know..I.can.usually.join.in....Completely.Disagree.Completely.Agree" ,
"X7..I.can.sing.or.play.music.from.memory....Completely.Disagree.Completely.Agree" ,
"X10..I.am.able.to.hit.the.right.notes.when.I.sing.along.with.a.recording....Completely.Disagree.Completely.Agree" ,
"X12..I.can.compare.and.discuss.differences.between.two.performances.or.versions.of.the.same.piece.of.music....Completely.Disagree.Completely.Agree" ,
"X14..I.have.never.been.complimented.for.my.talents.as.a.musical.performer....Completely.Disagree.Completely.Agree" ,
"X15..I.often.read.or.search.the.internet.for.things.related.to.music....Completely.Disagree.Completely.Agree" ,
"X17..I.am.not.able.to.sing.in.harmony.when.somebody.is.singing.a.familiar.tune....Completely.Disagree.Completely.Agree" ,
"X19..I.am.able.to.identify.what.is.special.about.a.given.musical.piece....Completely.Disagree.Completely.Agree" ,
"X23..When.I.sing..I.have.no.idea.whether.I.m.in.tune.or.not....Completely.Disagree.Completely.Agree" ,
"X24..Music.is.kind.of.an.addiction.for.me...I.couldn.t.live.without.it....Completely.Disagree.Completely.Agree" ,
"X25..I.don.t.like.singing.in.public.because.I.m.afraid.that.I.would.sing.wrong.notes....Completely.Disagree.Completely.Agree" ,
"X27..I.would.not.consider.myself.a.musician....Completely.Disagree.Completely.Agree" ,
"X29..After.hearing.a.new.song.two.or.three.times..I.can.usually.sing.it.by.myself....Completely.Disagree.Completely.Agree" ,
"X32..I.engaged.in.regular..daily.practice.of.a.musical.instrument..including.voice..for.___.years." ,
"X33..At.the.peak.of.my.interest..I.practiced.___.hours.per.day.on.my.primary.instrument." , "X37..I.can.play.___.musical.instruments")
# Reverse code
Gold[cols_reverse] <- lapply(Gold[cols_reverse], reverseCode, min=1, max=7)
# Add sub-scores and total to main df
ratings$Gold_total <- apply(Gold,1, sum)/38 # total GoldMSI score
ratings$Gold_activeengagement <- apply(Gold[cols_activeengagement], 1,sum)/9
ratings$Gold_perceptualabilities <- apply(Gold[cols_perceptualabilities],1, sum)/9
ratings$Gold_musicaltraining <-apply(Gold[cols_musicaltraining],1, sum)/7
ratings$Gold_singingabilities <- apply(Gold[cols_singingabilities],1, sum)/7
ratings$Gold_emotion <- apply(Gold[cols_emotion],1, sum)/6
ratings$Gold_musicalsophistication <- apply(Gold[cols_musicalsophistication],1, sum)/18
AIMS <- data %>%
dplyr::select("I.will.sometimes.move.my.hand.as.if.I.were..conducting..music....Completely.disagree.Completely.agree":"I.sometimes.feel.like.I.m.part.of.something.bigger.than.myself.when.I.listen.to.music....Completely.disagree.Completely.agree")
ratings$AIMS_total <- apply(AIMS,1, sum) # total GoldMSI score
PASS <- data %>%
dplyr::select("I.have.usually.found.lovemaking.to.be.intensely.pleasurable.":"I.have.been.fascinated.with.the.dancing.of.flames.in.a.fireplace.")
#delete column CJ which is an attention-checking question
PASS$Mark..False..for.this.question. <- NULL
# Replace 1s with 0s --> CURRENTLY REGULARLY CODED
PASS[] <- lapply(PASS, gsub, pattern = "TRUE", replacement = 1, fixed = TRUE)
PASS[] <- lapply(PASS, gsub, pattern = "FALSE", replacement = 0, fixed = TRUE)
PASS <- mutate_all(PASS, function(x) as.numeric(as.character(x)))
# PAS columns to reverse code and sub-score
cols_reverse <- c("I.have.usually.found.lovemaking.to.be.intensely.pleasurable.",
"When.eating.a.favorite.food..I.have.often.tried.to.eat.slowly.to.make.it.last.longer." ,
"I.have.often.enjoyed.the.feel.of.silk..velvet..or.fur." ,
"I.have.sometimes.enjoyed.feeling.the.strength.in.my.muscles." ,
"The.taste.of.food.has.always.been.important.to.me." ,
"I.have.always.loved.having.my.back.massaged." ,
"Trying.new.foods.is.something.I.have.always.enjoyed." ,
"When.I.have.seen.a.statue..I.have.had.the.urge.to.feel.it." ,
"I.have.always.had.a.number.of.favorite.foods." ,
"When.I.have.walked.by.a.bakery..the.smell.of.fresh.bread.has.often.made.me.hungry." ,
"I.have.often.enjoyed.receiving.a.strong..warm.handshake." ,
"Standing.on.a.high.place.and.looking.out.over.the.view.is.very.exciting." ,
"I.have.often.found.walks.to.be.relaxing.and.enjoyable." , "The.sound.of.the.rain.falling.on.the.roof.has.made.me.feel.snug.and.secure." ,
"I.like.playing.with.and.petting.soft.little.kittens.or.puppies." , "The.sound.of.organ.music.has.often.thrilled.me." ,
"Beautiful.scenery.has.been.a.great.delight.to.me." ,
"The.first.winter.snowfall.has.often.looked.pretty.to.me." , "I.have.sometimes.danced.by.myself.just.to.feel.my.body.move.with.the.music." ,
"On.seeing.a.soft..thick.carpet..I.have.sometimes.had.the.impulse.to.take.off.my.shoes.and.walk.barefoot.on.it." ,
"After.a.busy.day..a.slow.walk.has.often.felt.relaxing." , "The.bright.lights.of.a.city.are.exciting.to.look.at." ,
"It.has.always.made.me.feel.good.when.someone.I.care.about.reaches.out.to.touch.me." ,
"When.I.pass.by.flowers..I.have.often.stopped.to.smell.them." ,
"Sex.is.the.most.intensely.enjoyable.thing.in.life." ,
"It.has.often.felt.good.to.massage.my.muscles.when.they.are.tired.or.sore." ,
"When.I.m.feeling.a.little.sad..singing.has.often.made.me.feel.happier." , "A.good.soap.lather.when.I.m.bathing.has.sometimes.soothed.and.refreshed.me." ,
"A.brisk.walk.has.sometimes.made.me.feel.good.all.over." , "I.have.been.fascinated.with.the.dancing.of.flames.in.a.fireplace.")
cols_sex <- c("I.have.usually.found.lovemaking.to.be.intensely.pleasurable." ,
"I.have.seldom.enjoyed.any.kind.of.sexual.experience." ,
"Sex.is.okay..but.not.as.much.fun.as.most.people.claim.it.is." ,
"Sex.is.the.most.intensely.enjoyable.thing.in.life.")
cols_eating <-c("When.eating.a.favorite.food..I.have.often.tried.to.eat.slowly.to.make.it.last.longer." ,     "The.taste.of.food.has.always.been.important.to.me." ,
"Trying.new.foods.is.something.I.have.always.enjoyed." ,
"I.have.always.had.a.number.of.favorite.foods." ,
"I.have.had.very.little.desire.to.try.new.kinds.of.foods." ,
"I.ve.never.cared.much.about.the.texture.of.food." ,
"One.food.tastes.as.good.as.another.to.me." , "The.smell.of.dinner.cooking.has.hardly.ever.aroused.my.appetite.")
cols_touch <- c("I.have.often.enjoyed.the.feel.of.silk..velvet..or.fur." ,
"I.have.always.loved.having.my.back.massaged." ,
"When.I.have.seen.a.statue..I.have.had.the.urge.to.feel.it." ,
"I.never.have.the.desire.to.take.off.my.shoes.and.walk.through.a.puddle.barefoot." ,
"I.have.often.enjoyed.receiving.a.strong..warm.handshake." ,
"I.have.often.felt.uncomfortable.when.my.friends.touch.me." ,
"I.like.playing.with.and.petting.soft.little.kittens.or.puppies." , "On.seeing.a.soft..thick.carpet..I.have.sometimes.had.the.impulse.to.take.off.my.shoes.and.walk.barefoot.on.it." ,
"It.has.always.made.me.feel.good.when.someone.I.care.about.reaches.out.to.touch.me." ,
"It.has.often.felt.good.to.massage.my.muscles.when.they.are.tired.or.sore." ,
"A.good.soap.lather.when.I.m.bathing.has.sometimes.soothed.and.refreshed.me.")
cols_feeling <- c("I.have.sometimes.enjoyed.feeling.the.strength.in.my.muscles.")
cols_sound <- c("I.have.always.found.organ.music.dull.and.unexciting.",
"On.hearing.a.good.song..I.have.seldom.wanted.to.sing.along.with.it.",
"The.sound.of.rustling.leaves.has.never.much.pleased.me.",
"I.don.t.know.why.some.people.are.so.interested.in.music.",
"I.have.never.found.a.thunderstorm.exhilarating.",
"The.sound.of.the.rain.falling.on.the.roof.has.made.me.feel.snug.and.secure." ,
"The.sound.of.organ.music.has.often.thrilled.me.",
"I.have.seldom.cared.to.sing.in.the.shower.",
"I.have.usually.found.soft.music.boring.rather.than.relaxing.", "The.sounds.of.a.parade.have.never.excited.me." ,
"When.I.m.feeling.a.little.sad..singing.has.often.made.me.feel.happier.")
cols_vision <- c("The.color.that.things.are.painted.has.seldom.mattered.to.me." ,
"I.don.t.understand.why.people.enjoy.looking.at.the.stars.at.night." ,
"Flowers.aren.t.as.beautiful.as.many.people.claim." ,
"Poets.always.exaggerate.the.beauty.and.joys.of.nature." ,
"Standing.on.a.high.place.and.looking.out.over.the.view.is.very.exciting." ,
"Beautiful.scenery.has.been.a.great.delight.to.me." ,
"The.first.winter.snowfall.has.often.looked.pretty.to.me." ,
"The.bright.lights.of.a.city.are.exciting.to.look.at." ,
"The.beauty.of.sunsets.is.greatly.overrated." ,
"I.have.been.fascinated.with.the.dancing.of.flames.in.a.fireplace.")
cols_movement <-c ("Dancing..or.the.idea.of.it..has.always.seemed.dull.to.me.",
"I.have.had.very.little.fun.from.physical.activities.like.walking..swimming..or.sports." ,
"I.have.always.hated.the.feeling.of.exhaustion.that.comes.from.vigorous.activity." ,
"I.never.wanted.to.go.on.any.of.the.rides.at.an.amusement.park." ,
"I.have.often.found.walks.to.be.relaxing.and.enjoyable." ,
"I.have.sometimes.danced.by.myself.just.to.feel.my.body.move.with.the.music." ,
"After.a.busy.day..a.slow.walk.has.often.felt.relaxing." ,
"I.think.that.flying.a.kite.is.silly." ,
"A.brisk.walk.has.sometimes.made.me.feel.good.all.over.")
cols_temperature <-c ("Sunbathing.isn.t.really.more.fun.than.lying.down.indoors." , "The.warmth.of.an.open.fireplace.hasn.t.especially.soothed.and.calmed.me." , "I.ve.never.cared.to.sunbathe..it.just.makes.me.hot.")
cols_general <-c("There.just.are.not.many.things.that.I.have.ever.really.enjoyed.doing.")
cols_smell <- c ("When.I.have.walked.by.a.bakery..the.smell.of.fresh.bread.has.often.made.me.hungry." ,
"When.I.pass.by.flowers..I.have.often.stopped.to.smell.them.")
# this question was not categorized I.have.usually.finished.my.bath.or.shower.as.quickly.as.possible.just.to.get.it.over.with.
# Reverse code
PASS[cols_reverse] <- lapply(PASS[cols_reverse], reverseCode, min=0, max=1)
# Add sub-scores and total to main df
ratings$PASS_total <- apply(PASS,1, sum) # total PAS scores
ratings$PASS_sex <- apply(PASS[cols_sex], 1,sum)
ratings$PASS_eating <- apply(PASS[cols_eating],1, sum)
ratings$PASS_touch <-apply(PASS[cols_touch],1, sum)
ratings$PASS_feeling <- apply(PASS[cols_feeling],1, sum)
ratings$PASS_sound <- apply(PASS[cols_sound],1, sum)
ratings$PASS_vision <- apply(PASS[cols_vision],1, sum)
ratings$PASS_movement <- apply(PASS[cols_movement],1, sum)
ratings$PASS_temperature <- apply(PASS[cols_temperature],1, sum)
ratings$PASS_general <- apply(PASS[cols_general],1, sum)
ratings$PASS_smell <- apply(PASS[cols_smell],1, sum)
ratings$PASS_noaud <- ratings$PASS_total - ratings$PASS_sound
mean(ratings$PASS_noaud) + sd(ratings$PASS_noaud)
hist(ratings$PASS_noaud)
ggplot(data=ratings, aes(x=PASS_noaud, y=eBMRQ_total))+
geom_point() +
geom_hline(yintercept = 67, linetype="dotted") +
geom_vline(xintercept = 16.84785, linetype="dotted")
master <- pivot_longer(ratings, !ResponseId & !eBMRQ_total:PASS_noaud)
master$stim <- sub("_.*$", "", master$name)
master$stim <- sub("X", "", master$stim)
master$rating <-sub("X[[:digit:]]+_", "", master$name)
master$pre_post <- NA
i = 1:nrow(master)
for (x in i){
if (master$rating[x] == "Q397") {
master$rating[x] <- "liking"
master$pre_post[x] <- "pre"
} else if (master$rating[x] == "Q454") {
master$rating[x] <- "liking"
master$pre_post[x] <- "post"
} else if (master$rating[x] == "Q406") {
master$rating[x] <- "speech"
master$pre_post[x] <- "post"
}else if (master$rating[x] == "Q402") {
master$rating[x] <- "speech"
master$pre_post[x] <- "pre"
}
}
View(master)
master$stim <- as.numeric(master$stim)
master$stim_type <- NA
for (x in i){
if (master$stim[x] <= 24) {
master$stim_type[x] <- "illusion"
} else if (master$stim[x] > 24) {
master$stim_type[x] <- "control"
}
}
master1 <- read.csv(file='../data/master.csv')
View(master1)
liking_master <- master %>%
subset(rating=="liking")
View(liking_master)
library(tidyverse)
library(lme4)
library(lmerTest)
library(tidyverse)
library(lme4)
library(lmerTest)
master <- read.csv(file='../data/master.csv')
matched <- read.csv(file='../data/anhedonics_matchedcontrols.csv')
liking_master <- master %>%
subset(rating=="liking")
liking_matched <- matched %>%
subset(rating=="liking")
speech_master <- master %>%
subset(rating=="speech")
speech_matched <- matched %>%
subset(rating=="speech")
liking_master$stim_type <- as.factor(liking_master$stim_type)
liking_master$stim <- as.factor(liking_master$stim)
liking_master$pre_post <- as.factor(liking_master$pre_post)
liking_master$pre_post <- factor(liking_master$pre_post, levels = c("pre", "post"))
contrasts(liking_master$stim_type) <- c(-0.5,0.5)
contrasts(liking_master$pre_post) <- c(-0.5,0.5)
m2 <- lmer(data=liking_master, scale(value) ~ stim_type*pre_post + (stim_type*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2)
ontrasts(liking_master$pre_post)
contrasts(liking_master$pre_post
contrasts(liking_master$pre_post)
contrasts(liking_master$pre_post)
ggplot(data=liking_master, aes(x=stim, y=value, color=pre_post)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Liking Rating") +
xlab("Pre vs. Post Repetition")
ggplot(data=liking_master, aes(x=pre_post, y=value, color=stim_type)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Liking Rating") +
xlab("Pre vs. Post Repetition")
ggplot(data=liking_master, aes(x=pre_post, y=value, color=stim_type)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Liking Rating") +
xlab("Pre vs. Post Repetition")
ggplot(data=liking_master, aes(x=pre_post, y=value, color=stim_type)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Liking Rating") +
xlab("Pre vs. Post Repetition")
ggplot(data=liking_master, aes(x=pre_post, y=value, color=stim_type)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Liking Rating") +
xlab("Pre vs. Post Repetition")
speech_matched$stim_type <- as.factor(speech_matched$stim_type)
speech_matched$pre_post <- as.factor(speech_matched$pre_post)
speech_matched$group <- as.factor(speech_matched$group)
pivot_wider(data=speech_matched, pre_post)
pivot_wider(data=speech_matched, values_from = pre_post)
pivot_wider(data=speech_matched, values_from = value, names_from = pre_post)
pivot_longer(data=speech_matched, pre_post)
pivot_wider(data=speech_matched, values_from = value, names_from = pre_post)
liking_matched <- matched %>%
subset(rating=="liking")
View(liking_master)
View(liking_matched)
pivot_wider(data=liking_matched, values_from = value, names_from = pre_post)
pivot_wider(data=liking_matched, values_from = value, names_from = pre_post) %>%
pivot_wider(values_from = stim, names_from = name)
liking_matched_pre <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="pre")
liking_matched$pre <- liking_matched$value
liking_matched_pre$pre <- liking_matched$value
liking_matched_pre$pre <- liking_matched_pre$value
View(liking_matched_pre)
liking_matched_post <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="post")
liking_matched_post$post <- liking_matched_post$value
merge(liking_matched_pre, liking_matched_post)
merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"))
merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"), all.x = FALSE)
liking_matched_post <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select("ResponseId", "post", "stim")
liking_matched_post <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, post, stim)
liking_matched_post <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim)
View(liking_matched_post)
liking_matched_post <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, value)
liking_matched_post$post <- liking_matched_post$value
merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"), all)
View(liking_matched_post)
merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"))
liking_matched_post <- matched
liking_matched_pre$pre <- liking_matched_pre$value
liking_matched_post <- matched
liking_matched_post$post <- liking_matched_post$value
liking_matched_post <-
liking_matched_post %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"))
liking_matchedprepost <- merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"))
liking_master <- master %>%
subset(rating=="liking")
liking_matched_pre <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="pre")
liking_matched_pre$pre <- liking_matched_pre$value
liking_matched_post <- matched
liking_matched_post$post <- liking_matched_post$value
liking_matched_post <-
liking_matched_post %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
liking_matchedprepost <- merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"))
speech_master <- master %>%
subset(rating=="speech")
speech_matched <- matched %>%
subset(rating=="speech")
speech_matched_pre <- matched %>%
subset(rating=="speech") %>%
subset(pre_post=="pre")
speech_matched_pre$pre <- speech_matched_pre$value
speech_matched_post <- matched
speech_matched_post$post <- speech_matched_post$value
speech_matched_post <-
speech_matched_post %>%
subset(rating=="speech") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
speech_matchedprepost <- merge(speech_matched_pre, speech_matched_post, by=c("ResponseId", "stim"))
liking_matchedprepost$change <- liking_matchedprepost$post - liking_matchedprepost$pre
View(liking_matchedprepost)
speech_matchedprepost$change <- speech_matchedprepost$post - speech_matchedprepost$pre
View(speech_matched)
View(speech_matchedprepost)
speech_matchedprepost$stim_type <- as.factor(speech_matchedprepost$stim_type)
speech_matchedprepost$group <- as.factor(speech_matchedprepost$group)
contrasts(speech_matched$stim_type) <- c(-0.5,0.5)
contrasts(speech_matchedprepost$stim_type) <- c(-0.5,0.5)
contrasts(speech_matchedprepost$group) <- c(0.5,-0.5)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type*group|ResponseId) + (1|stim))
summary(m1)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type*group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type*group|ResponseId),control=lmerControl(optimizer="bobyqa"))
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type:group + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type*group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
ggplot(data=speech_matchedprepost, aes(x=group, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
# theme(legend.position = "none")+
ylab("Speech Rating") +
xlab("Musical Anhedonics vs. Matched Controls")
ggplot(data=speech_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
# theme(legend.position = "none")+
ylab("Speech Rating") +
xlab("Musical Anhedonics vs. Matched Controls")
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (1|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
ggplot(data=speech_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
# theme(legend.position = "none")+
ylab("Change in Speech Rating after Repetition") +
xlab("Musical Anhedonics vs. Matched Controls")
liking_matchedprepost$stim_type <- as.factor(liking_matchedprepost$stim_type)
liking_matchedprepost$group <- as.factor(liking_matchedprepost$group)
contrasts(liking_matchedprepost$stim_type) <- c(-0.5,0.5)
contrasts(liking_matchedprepost$group) <- c(0.5,-0.5)
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (pre_post*group|ResponseId) + (1|stim))
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type*group|ResponseId) + (1|stim))
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim))
summary(m1)
ggplot(data=liking_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
# theme(legend.position = "none")+
ylab("Change in Liking Rating after Repetition") +
xlab("Stimulus Type")
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim))
summary(m1)
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId))
summary(m1)
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim))
summary(m1)
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type|ResponseId) + (1|stim))
summary(m1)
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim))
summary(m1)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type |ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
cor.test(liking_matchedprepost$change, speech_matchedprepost$change)
