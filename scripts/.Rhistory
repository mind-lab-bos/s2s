group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(musicality_sd = sd(musicality, na.rm=TRUE)) %>%
drop_na()
master_long_pre <- master_long %>%
subset(pre_post=="pre")
SE_musicality_pre$freq <-table(master_long_pre$stim)
SE_musicality_pre$SE_musicality <- (SE_musicality_pre$musicality_sd)/(sqrt(SE_musicality_pre$freq))
musicality_means_post <-
master_long %>%
subset(pre_post=="post") %>%
group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(musicality = mean(musicality, na.rm=TRUE)) %>%
drop_na()
SE_musicality_post <-
master_long %>%
subset(pre_post=="post") %>%
group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(musicality_sd = sd(musicality, na.rm=TRUE)) %>%
drop_na()
master_long_post <- master_long %>%
subset(pre_post=="post")
SE_musicality_post$freq <-table(master_long_post$stim)
SE_musicality_post$SE_musicality <- (SE_musicality_post$musicality_sd)/(sqrt(SE_musicality_post$freq))
SE_musicality_post <- merge(SE_musicality_post, musicality_means_post, by=c("stim", "pre_post"))
SE_musicality_pre <- merge(SE_musicality_pre, musicality_means_pre, by=c("stim", "pre_post"))
SE_musicality <- rbind(SE_musicality_post, SE_musicality_pre)
SE_musicality$lower <- SE_musicality$musicality-SE_musicality$SE_musicality
SE_musicality$upper <- SE_musicality$musicality+SE_musicality$SE_musicality
#liking
liking_means_pre <-
master_long %>%
subset(pre_post=="pre") %>%
group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(liking = mean(liking, na.rm=TRUE)) %>%
drop_na()
SE_liking_pre <-
master_long %>%
subset(pre_post=="pre") %>%
group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(liking_sd = sd(liking, na.rm=TRUE)) %>%
drop_na()
SE_liking_pre$freq <-table(master_long_pre$stim)
SE_liking_pre$SE_liking <- (SE_liking_pre$liking_sd)/(sqrt(SE_liking_pre$freq))
liking_means_post <-
master_long %>%
subset(pre_post=="post") %>%
group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(liking = mean(liking, na.rm=TRUE)) %>%
drop_na()
SE_liking_post <-
master_long %>%
subset(pre_post=="post") %>%
group_by(stim, pre_post,stim_type) %>%
dplyr::summarize(liking_sd = sd(liking, na.rm=TRUE)) %>%
drop_na()
SE_liking_post$freq <-table(master_long_post$stim)
SE_liking_post$SE_liking <- (SE_liking_post$liking_sd)/(sqrt(SE_liking_post$freq))
SE_liking_post <- merge(SE_liking_post, liking_means_post, by=c("stim", "pre_post"))
SE_liking_pre <- merge(SE_liking_pre, liking_means_pre, by=c("stim", "pre_post"))
SE_liking <- rbind(SE_liking_post, SE_liking_pre)
SE_liking$lower_liking <- SE_liking$liking-SE_liking$SE_liking
SE_liking$upper_liking <- SE_liking$liking+SE_liking$SE_liking
SE <- merge(SE_liking, SE_musicality, by=c("stim","pre_post"))
SE$pre_post <- factor(SE$pre_post, levels = c("pre", "post"))
ggplot(data=SE, aes(x=musicality, y=liking))+
geom_point()+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5, width=0)+
geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0) +
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
ggplot(data=SE, aes(x=musicality, y=liking, color=stim_type))+
geom_point()+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5, width=0)+
geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0) +
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
View(SE)
ggplot(data=SE, aes(x=musicality, y=liking, color=stim_type.x.x))+
geom_point()+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5, width=0)+
geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0) +
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
ggplot(data=SE, aes(x=musicality, y=liking))+
geom_point()+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5, width=0)+
geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0) +
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
#adding model predictions
m9 <- lmer(data=master_long, scale(liking) ~ scale(musicality)*pre_post + (scale(musicality)*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
range(scale(master_long$liking))
range(scale(master_long$liking), na.rm = TRUE)
range(scale(master_long$musicality), na.rm = TRUE)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.001),
musicality_scaled=seq(-0.8316599,2.7328141,0.001)
)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
library(ggsignif)
library(sjPlot)
library(lmerTest)
library(lme4)
library(modelsummary)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
library(AICcmodavg)
library(emmeans)
library(MatchIt)
library(DescTools)
pred2a <- cbind(newdata, predictions)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled*pre_post + (musicality_scaled*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
#adding model predictions
master_long$musicality_scaled <- scale(master_long$musicality)
master_long$liking_scaled <- scale(master_long$liking)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled*pre_post + (musicality_scaled*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m9)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.001),
musicality_scaled=seq(-0.8316599,2.7328141,0.001),
pre_post = c("pre", "post")
)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0, control=lmerControl(optimizer="bobyqa"))
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled*pre_post + (musicality_scaled*pre_post|ResponseId) + (1|stim))
summary(m9)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.001),
musicality_scaled=seq(-0.8316599,2.7328141,0.001),
pre_post = c("pre", "post")
)
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
View(master_long)
View(m9)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled*pre_post + (musicality_scaled*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m9)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.001),
musicality_scaled=seq(-0.8316599,2.7328141,0.001),
pre_post = c("pre", "post")
)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
View(m9)
View(newdata)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.1),
musicality_scaled=seq(-0.8316599,2.7328141,0.1),
pre_post = c("pre", "post")
)
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
View(m9)
predictions<- predictSE(m9, newdata, se.fit = FALSE, print.matrix =
TRUE, level = 0)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled + (musicality_scaled|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m9)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.1),
musicality_scaled=seq(-0.8316599,2.7328141,0.1),
pre_post = c("pre", "post")
)
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled*pre_post + (musicality_scaled|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m9)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.1),
musicality_scaled=seq(-0.8316599,2.7328141,0.1),
pre_post = c("pre", "post")
)
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled + (musicality_scaled*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
newdata$pre_post <- as.factor(newdata$pre_post)
newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
View(predictions)
newdata$pre_post <- as.factor(newdata$pre_post)
m9 <- lmer(data=master_long, liking_scaled ~ musicality_scaled*pre_post + (musicality_scaled*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.1),
musicality_scaled=seq(-0.8316599,2.7328141,0.1),
pre_post = c("pre", "post")
)
newdata$pre_post <- as.factor(newdata$pre_post)
#newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
newdata$pre_post <- as.factor(newdata$pre_post)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
View(newdata)
contrasts(newdata$pre_post)
newdata <- expand.grid(
liking_scaled=seq(-1.811906,1.940529,0.1),
musicality_scaled=seq(-0.8316599,2.7328141,0.1),
pre_post = c("post")
)
newdata$pre_post <- as.factor(newdata$pre_post)
#newdata$pre_post <- factor(newdata$pre_post, levels = c("pre", "post"))
contrasts(newdata$pre_post) <- c(-0.5,0.5)
predictions<- predictSE(m9, newdata, se.fit = TRUE, print.matrix =
TRUE, level = 0)
ggplot(data=SE, aes(x=musicality, y=liking))+
geom_point()+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5, width=0)+
geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0) +
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
library(tidyverse)
library(lmerTest)
data <- read.csv(file='../data/data_exp_147053-v13_task-3icr.csv')
spreadsheet10 <- read.csv(file='../stimuli/task/spreadsheet10.csv')
#select relevant data for music ratings
dataclean <-
data %>%
dplyr::select("Participant.Public.ID", "counterbalance.5a3y", "display", "blockNum", "Spreadsheet.Row", "Screen.Name","Response", "trial_counter")
dataclean <- dataclean[!(is.na(dataclean$Response) | dataclean$Response=="" | dataclean$Response=="AUDIO PLAY REQUESTED"), ]
dataclean <- subset(dataclean, display == "trial_rate_1" | display == "trial_rate")
dataclean$Screen.Name <- gsub("_1","", dataclean$Screen.Name)
dataclean$Screen.Name <- ifelse(dataclean$Screen.Name=="rating_liking", "rating_like",dataclean$Screen.Name )
dataclean$rating <- ifelse(dataclean$blockNum=="1" | dataclean$blockNum=="2", "pre","post" )
dataclean <- pivot_wider(dataclean, names_from = "Screen.Name", values_from = "Response")
#dataclean <- dataclean %>% group_by(Participant.Public.ID, rating) %>% mutate(pres_order = 1:n())
x=1:nrow(dataclean)
dataclean$clip <- NA
for (i in x) {
dataclean$clip[i] = spreadsheet10[dataclean$Spreadsheet.Row[i],dataclean$counterbalance.5a3y[i]]
}
dataclean <- subset(dataclean, grepl("^BP", dataclean$clip))
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_0.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_4.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_5.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_6.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_3.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='.wav', replacement='')
dataclean$outcome_type <- ifelse(stringr::str_sub(dataclean$clip, -3) == "Man", 'Altered', 'Original')
dataclean[] <- lapply(dataclean, gsub, pattern='_Man', replacement='')
manipulations <- spreadsheet10[12:111]
manipulations <- manipulations[15:97,]
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_0.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_4.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_5.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_6.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_3.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='.wav', replacement='')
manipulations[88,] <- "TEST"
manipulations[89,] <- "TEST2"
#manipulations[80,] <- "TEST3"
#manipulations[69,] <- "TEST4"
manipulations$fnames1[88] <- "BP_Clarinet_13"
manipulations$fnames1[89] <- "BP_Clarinet_17"
#manipulations$fnames1[80] <- "BP_Clarinet_14"
#manipulations$fnames1[69] <- "BP_Clarinet_20"
manipulations[] <- lapply(manipulations, gsub, pattern='_Man', replacement='')
#manipulations <- manipulations[!apply(manipulations == "", 1, all),]
manipulations_final <- lapply(X = manipulations,
FUN = table)
test <- bind_rows(manipulations_final, .id = "fnames")
count(manipulations)
table(manipulations$fnames3)
#manipulations_final <- manipulations_final - 1
#manipulations_final <- ifelse(manipulations_final>1,manipulations_final - 2, manipulations_final - 1)
unique(manipulations_final)
dataclean$manipulation <- NA
x=1:nrow(dataclean)
for (i in x) {
dataclean$manipulation[i] = manipulations_final[[dataclean$counterbalance.5a3y[i]]][[dataclean$clip[i]]]
}
dataclean$manipulation <- dataclean$manipulation -1
dataclean_post <- dataclean %>%
subset(grepl("^BP",clip)) %>%
subset(rating=="post") %>%
subset(manipulation < 17) %>%
subset(manipulation != 11) %>%
subset(manipulation != 7)
dataclean_post$rating_familiarity <- as.numeric(dataclean_post$rating_familiarity)
dataclean_post$rating_like <- as.numeric(dataclean_post$rating_like)
#dataclean_post$pres_order <- as.numeric(dataclean_post$pres_order)
#pilot_postlike <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_like, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Liking Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
#pilot_postfam <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_familiarity, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Familiarity Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
dataclean_post$outcome_type <- as.factor(dataclean_post$outcome_type)
contrasts(dataclean_post$outcome_type) <- c(-0.5,0.5)
m1<- lmer(data=dataclean_post, scale(rating_like) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m1)
m2<- lmer(data=dataclean_post, scale(rating_familiarity) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID))
summary(m2)
dataclean_post %>%
subset(manipulation != 0) %>%
lmer(scale(rating_like) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip)) %>%
summary()
dataclean_post_nozero <- dataclean_post %>%
subset(manipulation != 0)
m1 <- lmer(data=dataclean_post_nozero,scale(rating_like) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip)) %>%
summary()
m1 <- lmer(data=dataclean_post_nozero,scale(rating_like) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m1)
m3<- lmer(data=dataclean_post, scale(rating_like) ~ scale(rating_familiarity) +  (1|Participant.Public.ID))
summary(m3)
data2 <- read.csv(file='../data/data_exp_147053-v14_task-3icr.csv')
data <- rbind(data, data2)
View(data)
#select relevant data for music ratings
dataclean <-
data %>%
dplyr::select("Participant.Public.ID", "counterbalance.5a3y", "display", "blockNum", "Spreadsheet.Row", "Screen.Name","Response", "trial_counter")
dataclean <- dataclean[!(is.na(dataclean$Response) | dataclean$Response=="" | dataclean$Response=="AUDIO PLAY REQUESTED"), ]
dataclean <- subset(dataclean, display == "trial_rate_1" | display == "trial_rate")
dataclean$Screen.Name <- gsub("_1","", dataclean$Screen.Name)
dataclean$Screen.Name <- ifelse(dataclean$Screen.Name=="rating_liking", "rating_like",dataclean$Screen.Name )
dataclean$rating <- ifelse(dataclean$blockNum=="1" | dataclean$blockNum=="2", "pre","post" )
dataclean <- pivot_wider(dataclean, names_from = "Screen.Name", values_from = "Response")
#dataclean <- dataclean %>% group_by(Participant.Public.ID, rating) %>% mutate(pres_order = 1:n())
x=1:nrow(dataclean)
dataclean$clip <- NA
for (i in x) {
dataclean$clip[i] = spreadsheet10[dataclean$Spreadsheet.Row[i],dataclean$counterbalance.5a3y[i]]
}
dataclean <- subset(dataclean, grepl("^BP", dataclean$clip))
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_0.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_4.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_5.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_6.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='_Var_3.wav', replacement='')
dataclean[] <- lapply(dataclean, gsub, pattern='.wav', replacement='')
dataclean$outcome_type <- ifelse(stringr::str_sub(dataclean$clip, -3) == "Man", 'Altered', 'Original')
dataclean[] <- lapply(dataclean, gsub, pattern='_Man', replacement='')
manipulations <- spreadsheet10[12:111]
manipulations <- manipulations[15:97,]
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_0.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_4.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_5.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_6.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='_Var_3.wav', replacement='')
manipulations[] <- lapply(manipulations, gsub, pattern='.wav', replacement='')
manipulations[88,] <- "TEST"
manipulations[89,] <- "TEST2"
#manipulations[80,] <- "TEST3"
#manipulations[69,] <- "TEST4"
manipulations$fnames1[88] <- "BP_Clarinet_13"
manipulations$fnames1[89] <- "BP_Clarinet_17"
#manipulations$fnames1[80] <- "BP_Clarinet_14"
#manipulations$fnames1[69] <- "BP_Clarinet_20"
manipulations[] <- lapply(manipulations, gsub, pattern='_Man', replacement='')
#manipulations <- manipulations[!apply(manipulations == "", 1, all),]
manipulations_final <- lapply(X = manipulations,
FUN = table)
test <- bind_rows(manipulations_final, .id = "fnames")
count(manipulations)
table(manipulations$fnames3)
#manipulations_final <- manipulations_final - 1
#manipulations_final <- ifelse(manipulations_final>1,manipulations_final - 2, manipulations_final - 1)
unique(manipulations_final)
dataclean$manipulation <- NA
x=1:nrow(dataclean)
for (i in x) {
dataclean$manipulation[i] = manipulations_final[[dataclean$counterbalance.5a3y[i]]][[dataclean$clip[i]]]
}
dataclean$manipulation <- dataclean$manipulation -1
dataclean_post <- dataclean %>%
subset(grepl("^BP",clip)) %>%
subset(rating=="post") %>%
subset(manipulation < 17) %>%
subset(manipulation != 11) %>%
subset(manipulation != 7)
dataclean_post$rating_familiarity <- as.numeric(dataclean_post$rating_familiarity)
dataclean_post$rating_like <- as.numeric(dataclean_post$rating_like)
#pilot_postlike <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_like, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Liking Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
View(dataclean_post)
#pilot_postfam <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_familiarity, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Familiarity Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
dataclean_post$outcome_type <- as.factor(dataclean_post$outcome_type)
contrasts(dataclean_post$outcome_type) <- c(-0.5,0.5)
m1<- lmer(data=dataclean_post, scale(rating_like) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m1)
m2<- lmer(data=dataclean_post, scale(rating_familiarity) ~ scale(manipulation)*outcome_type + (scale(manipulation)*outcome_type|Participant.Public.ID))
summary(m2)
View(test)
m12<- lmer(data=dataclean_post, scale(rating_like) ~ poly(manipulation, 2,raw = FALSE)*outcome_type + (poly(manipulation, 2,raw = FALSE)*outcome_type|Participant.Public.ID) + (1|clip))
summary(m12)
#pilot_postlike <-
ggplot(data=dataclean_post, aes(x=manipulation, y=rating_like, color=outcome_type))+
#geom_point(alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2, alpha=0.7) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.7) +
theme_classic() +
theme( axis.title.x = element_text(family="Arial", size=22),
axis.title.y = element_text(family="Arial",size=22),
axis.text.x = element_text(family="Arial", size=20),
axis.text.y = element_text(family="Arial",size=20),
strip.text.x = element_text(family="Arial",size=20),
legend.position = "none") +
ylab("Liking Rating") +
xlab("Exposure (Number of presentations)")+
scale_color_manual(values=c("#E69F00","#56B4E9")) +
scale_fill_manual(values=c("#E69F00","#56B4E9"))
