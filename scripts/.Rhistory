geom_hline(yintercept = 67, linetype="dotted", color="blue") +
geom_vline(xintercept = 16.84785, linetype="dotted", color="red") +
theme_classic() +
xlab("PAS Scores (Sound Items Removed)") +
ylab("Total eBMRQ Scores") +
geom_point(data=df.match, aes(color=group)) +
theme(legend.position = "none")
master %>% distinct(ResponseId, .keep_all = TRUE) %>%
ggplot(aes(x=PASS_noaud, y=eBMRQ_total))+
geom_point(alpha=0.65) +
geom_hline(yintercept = 67, linetype="dotted", color="blue") +
geom_vline(xintercept = 16.84785, linetype="dotted", color="red") +
theme_classic() +
xlab("PAS Scores (Sound Items Removed)") +
ylab("Total eBMRQ Scores") +
geom_point(data=df.match, aes(color=group))
library(MatchIt)
library(tidyverse)
master <- read.csv(file="../data/master.csv")
master_single <- read.csv(file="../data/master.csv") %>%
distinct(ResponseId, .keep_all = TRUE)
mean(master_single$PASS_noaud) + sd(master_single$PASS_noaud)
quantile(master_single$eBMRQ_total, probs = c(.1), na.rm=TRUE)
master %>% distinct(ResponseId, .keep_all = TRUE) %>%
ggplot(aes(x=PASS_noaud, y=eBMRQ_total))+
geom_point(alpha=0.65) +
geom_hline(yintercept = 67, linetype="dotted", color="blue") +
geom_vline(xintercept = 16.84785, linetype="dotted", color="red") +
theme_classic() +
xlab("PAS Scores (Sound Items Removed)") +
ylab("Total eBMRQ Scores") +
geom_point(data=df.match, aes(color=group))
mean(master_single$PASS_noaud) + sd(master_single$PASS_noaud)
quantile(master_single$eBMRQ_total, probs = c(.1), na.rm=TRUE)
master %>% distinct(ResponseId, .keep_all = TRUE) %>%
ggplot(aes(x=PASS_noaud, y=eBMRQ_total))+
geom_point(alpha=0.65) +
geom_hline(yintercept = 67, linetype="dotted", color="blue") +
geom_vline(xintercept = 16.84785, linetype="dotted", color="red") +
theme_classic() +
xlab("PAS Scores (Sound Items Removed)") +
ylab("Total eBMRQ Scores")
# geom_point(data=df.match, aes(color=group))
general_hedonics <-
master_single %>%
subset(PASS_noaud<16.84785)
musical_anhedonics <- subset(general_hedonics, eBMRQ_total< 67)
musical_anhedonics$group = "Anhedonic"
hedonics <- subset(general_hedonics, eBMRQ_total > 67)
hedonics$group = "Hedonic"
potential_matchedcontrols <- rbind(musical_anhedonics, hedonics)
potential_matchedcontrols$group = ifelse(potential_matchedcontrols$group == 'Anhedonic', 1, 0)
potential_matchedcontrols$group <- as.factor(potential_matchedcontrols$group)
matched <- MatchIt::matchit(group ~ Gold_perceptualabilities + PASS_noaud + Gold_musicaltraining, data=potential_matchedcontrols, method='nearest', ratio=1)
summary(matched)
df.match <- MatchIt::match.data(matched)[1:ncol(potential_matchedcontrols)]
df.match$group = ifelse(df.match$group == '0', "Matched Controls", "Musical Anhedonics")
controls <- subset(df.match, group=="Matched Controls")
anhedonics <- subset(df.match, group=="Musical Anhedonics")
write.csv(df.match, file="../data/anhedonics_matchedcontrols.csv")
df.matchlong <- master %>%
subset(ResponseId %in% df.match$ResponseId)
df.matchlong <- df.match %>%
select(ResponseId, group) %>%
merge(df.matchlong, by= "ResponseId")
write.csv(df.match, file="../data/anhedonics_matchedcontrols.csv")
write.csv(df.matchlong, file="../data/anhedonics_matchedcontrolslong.csv")
library(tidyverse)
library(lme4)
library(lmerTest)
library(emmeans)
master <- read.csv(file='../data/master.csv')
matched <- read.csv(file='../data/anhedonics_matchedcontrolslong.csv')
liking_master <- master %>%
subset(rating=="liking")
liking_master_pre <- master %>%
subset(rating=="liking") %>%
subset(pre_post=="pre")
liking_master_pre$pre <- liking_master_pre$value
liking_master_post <- master
liking_master_post$post <- liking_master_post$value
liking_master_post <-
liking_master_post %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
liking_masterprepost <- merge(liking_master_pre, liking_master_post, by=c("ResponseId", "stim"))
liking_masterprepost$change <- liking_masterprepost$post - liking_masterprepost$pre
liking_matched_pre <- matched %>%
subset(rating=="liking") %>%
subset(pre_post=="pre")
liking_matched_pre$pre <- liking_matched_pre$value
liking_matched_post <- matched
liking_matched_post$post <- liking_matched_post$value
liking_matched_post <-
liking_matched_post %>%
subset(rating=="liking") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
liking_matchedprepost <- merge(liking_matched_pre, liking_matched_post, by=c("ResponseId", "stim"))
liking_matchedprepost$change <- liking_matchedprepost$post - liking_matchedprepost$pre
speech_master <- master %>%
subset(rating=="speech")
speech_master_pre <- master %>%
subset(rating=="speech") %>%
subset(pre_post=="pre")
speech_master_pre$pre <- speech_master_pre$value
speech_master_post <- master
speech_master_post$post <- speech_master_post$value
speech_master_post <-
speech_master_post %>%
subset(rating=="speech") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
speech_masterprepost <- merge(speech_master_pre, speech_master_post, by=c("ResponseId", "stim"))
speech_masterprepost$change <- speech_masterprepost$post - speech_masterprepost$pre
speech_matched <- matched %>%
subset(rating=="speech")
speech_matched_pre <- matched %>%
subset(rating=="speech") %>%
subset(pre_post=="pre")
speech_matched_pre$pre <- speech_matched_pre$value
speech_matched_post <- matched
speech_matched_post$post <- speech_matched_post$value
speech_matched_post <-
speech_matched_post %>%
subset(rating=="speech") %>%
subset(pre_post=="post") %>%
select(ResponseId, stim, post)
speech_matchedprepost <- merge(speech_matched_pre, speech_matched_post, by=c("ResponseId", "stim"))
speech_matchedprepost$change <- speech_matchedprepost$post - speech_matchedprepost$pre
speech_masterprepost$musicality_pre <- speech_masterprepost$pre
speech_masterprepost$musicality_post <- speech_masterprepost$post
speech_masterprepost$musicality_change <- speech_masterprepost$change
liking_masterprepost$liking_pre <- liking_masterprepost$pre
liking_masterprepost$liking_post <- liking_masterprepost$post
liking_masterprepost$liking_change <- liking_masterprepost$change
master_prepost <- speech_masterprepost %>%
select("ResponseId", "stim", "musicality_pre", "musicality_post", "musicality_change") %>%
merge(liking_masterprepost, by=c("ResponseId", "stim"))
speech_master$musicality <- speech_master$value
liking_master$liking <- liking_master$value
master_long <- speech_master %>%
select("ResponseId", "stim", "musicality") %>%
merge(liking_master, by=c("ResponseId", "stim"))
speech_master$stim_type <- as.factor(speech_master$stim_type)
speech_master$pre_post <- as.factor(speech_master$pre_post)
contrasts(speech_master$stim_type) <- c(-0.5,0.5)
speech_master$pre_post <- factor(speech_master$pre_post, levels = c("pre", "post"))
contrasts(speech_master$pre_post) <- c(-0.5,0.5)
liking_master$stim_type <- as.factor(liking_master$stim_type)
liking_master$stim <- as.factor(liking_master$stim)
liking_master$pre_post <- as.factor(liking_master$pre_post)
liking_master$pre_post <- factor(liking_master$pre_post, levels = c("pre", "post"))
contrasts(liking_master$stim_type) <- c(-0.5,0.5)
contrasts(liking_master$pre_post) <- c(-0.5,0.5)
speech_matchedprepost$stim_type <- as.factor(speech_matchedprepost$stim_type)
speech_matchedprepost$group <- as.factor(speech_matchedprepost$group)
contrasts(speech_matchedprepost$stim_type) <- c(-0.5,0.5)
contrasts(speech_matchedprepost$group) <- c(0.5,-0.5)
m1 <- lmer(data=speech_matchedprepost, scale(change) ~ stim_type*group + (stim_type + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
ggplot(data=speech_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
# theme(legend.position = "none")+
ylab("Change in Speech Rating after Repetition") +
xlab("Stimulus Type")
ggplot(data=speech_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Change in Speech Rating after Repetition") +
xlab("Stimulus Type")
liking_matchedprepost$stim_type <- as.factor(liking_matchedprepost$stim_type)
liking_matchedprepost$group <- as.factor(liking_matchedprepost$group)
contrasts(liking_matchedprepost$stim_type) <- c(-0.5,0.5)
contrasts(liking_matchedprepost$group) <- c(0.5,-0.5)
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
ggplot(data=liking_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
# theme(legend.position = "none")+
ylab("Change in Liking Rating after Repetition") +
xlab("Stimulus Type")
ggplot(data=liking_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Change in Liking Rating after Repetition") +
xlab("Stimulus Type")
ggplot(data=liking_matchedprepost, aes(x=stim_type, y=change, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Change in Liking Rating after Repetition") +
xlab("Stimulus Type")
ggplot(data=speech_matchedprepost, aes(x=stim_type, y=value, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
#theme(legend.position = "none")+
ylab("Change in Speech Rating after Repetition") +
xlab("Stimulus Type")
ggplot(data=liking_matchedprepost, aes(x=stim_type, y=change, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
theme(legend.position = "none")+
ylab("Change in Liking Rating after Repetition") +
xlab("Stimulus Type")
ggplot(data=liking_matchedprepost, aes(x=stim_type, y=change, color=group)) +
# ggdist::geom_dotsinterval() +
stat_summary(fun.data = 'mean_cl_normal', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_cl_normal', geom = 'pointrange', alpha=0.5) +
theme_classic()+
#theme(legend.position = "none")+
ylab("Change in Liking Rating after Repetition") +
xlab("Stimulus Type")
m1 <- lmer(data=liking_matchedprepost, scale(change) ~ stim_type*group + (stim_type|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1)
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
#geom_jitter(width=0.2, alpha=0.3)+
stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
# geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5,  height=0.2)+
#geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0.2) +
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
#did musicality ratings differ by eBMRQ scores?
speech_masterprepost$stim_type <- as.factor(speech_masterprepost$stim_type)
contrasts(speech_masterprepost$stim_type) <- c(-0.5,0.5)
m3 <- lmer(data=speech_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_type*scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m3)
m3 <- lmer(data=speech_masterprepost, scale(value) ~ stim_type*scale(eBMRQ_total)*pre_post + (stim_type*scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
ggplot(data=speech_masterprepost, aes(x=eBMRQ_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total eBMRQ Score") +
ylab("Change (Post - Pre) in Musicality Scores")
ggplot(data=speech_masterprepost, aes(x=eBMRQ_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total eBMRQ Score") +
ylab("Change (Post - Pre) in Musicality Scores")
#did liking ratings differ by eBMRQ scores?
liking_masterprepost$stim_type <- as.factor(liking_masterprepost$stim_type)
contrasts(liking_masterprepost$stim_type) <- c(-0.5,0.5)
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_type:scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_typescale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_type*scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m4)
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_type|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m4)
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m4)
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_type*scale(eBMRQ_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m4)
m4 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(eBMRQ_total) + (stim_type:scale(eBMRQ_total) + stim_type|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m4)
ggplot(data=liking_masterprepost, aes(x=eBMRQ_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total eBMRQ Score") +
ylab("Change (Post - Pre) in Musicality Scores")
m5 <- lmer(data=speech_masterprepost, scale(change) ~ stim_type*scale(AIMS_total) + (stim_type*scale(AIMS_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m5)
ggplot(data=speech_masterprepost, aes(x=AIMS_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total AIMS Score") +
ylab("Change (Post - Pre) in Musicality Scores")
emmeans::emtrends(m5, pairwise ~ stim_type, var = "AIMS_total", lmer.df = "satterthwaite",lmerTest.limit = 16416)
#did liking ratings differ by AIMS scores?
m6 <- lmer(data=liking_masterprepost, scale(change) ~ stim_type*scale(AIMS_total) + (stim_type*scale(AIMS_total)|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m6)
ggplot(data=speech_masterprepost, aes(x=AIMS_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total AIMS Score") +
ylab("Change (Post - Pre) in Liking Ratings")
ggplot(data=liking_masterprepost, aes(x=AIMS_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total AIMS Score") +
ylab("Change (Post - Pre) in Liking Ratings")
master_long$stim <- as.factor(master_long$stim)
master_long$pre_post <- as.factor(master_long$pre_post)
master_long$pre_post <- factor(master_long$pre_post, levels = c("pre", "post"))
contrasts(master_long$pre_post) <- c(-0.5,0.5)
m9 <- lmer(data=master_long, scale(liking) ~ scale(musicality)*pre_post + (scale(musicality)*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m9)
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
#geom_jitter(width=0.2, alpha=0.3)+
stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
# geom_errorbar(data=SE, aes(ymin = lower_liking, ymax = upper_liking), alpha=0.5,  height=0.2)+
#geom_errorbarh(data=SE, aes(xmin = lower, xmax = upper), alpha=0.5,  height=0.2) +
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating")
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
#geom_jitter(width=0.2, alpha=0.3)+
stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
test(emmeans::emtrends(m9, pairwise ~ pre_post, var = "musicality", lmer.df = "satterthwaite",lmerTest.limit = 65492))
m10 <- lmer(data=master_prepost, scale(liking_change) ~ scale(musicality_change)*stim_type + (scale(musicality_change)*stim_type|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m10)
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_pointalpha=0.3)+
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_point(alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.2, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.15, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.25,height=0.1, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.25,height=0.25, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
##Assignin eBMRQ Tertiles
#define teritles
vTert = quantile(speech_master$eBMRQ_total, c(0:3/3))
#classify tertile class
speech_master$tert = with(speech_master,
cut(eBMRQ_total,
vTert,
include.lowest = T,
labels = c("Anhedonic", "Hedonic",
"Hyperhedonic")))
master_long <- speech_master %>%
select("ResponseId", "stim", "musicality") %>%
merge(liking_master, by=c("ResponseId", "stim"))
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.25,height=0.25, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(tert~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
View(master_long)
master_long <- speech_master %>%
select("ResponseId", "stim", "musicality", "tert") %>%
merge(liking_master, by=c("ResponseId", "stim"))
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.25,height=0.25, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(tert~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
#general plots
ggplot(data=master_long, aes(x=musicality, y=liking, color=stim_type))+
geom_jitter(width=0.25,height=0.25, alpha=0.3)+
#stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
#stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
#geom_smooth(method="lm") +
facet_grid(pre_post~tert) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
ggplot(data=master_long, aes(x=liking, y=musicality, color=stim_type))+
#geom_jitter(width=0.2, alpha=0.3)+
stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Musicality Rating") +
ylab("Liking Rating") +
theme(legend.position = "none")
ggplot(data=master_long, aes(x=liking, y=musicality, color=stim_type))+
#geom_jitter(width=0.2, alpha=0.3)+
stat_summary(fun.data  = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~pre_post) +
xlab("Liking Rating") +
ylab("Musicality Rating") +
theme(legend.position = "none")
ggplot(data=speech_masterprepost, aes(x=eBMRQ_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total eBMRQ Score") +
ylab("Change (Post - Pre) in Musicality Ratings")
ggplot(data=liking_masterprepost, aes(x=eBMRQ_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total eBMRQ Score") +
ylab("Change (Post - Pre) in Musicality Scores")
ggplot(data=liking_masterprepost, aes(x=eBMRQ_total, y=change))+
#geom_point()+
stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0, alpha=0.5) +
stat_summary(fun.data = 'mean_se', geom = 'pointrange', alpha=0.5)+
theme_classic()+
geom_smooth(method="lm") +
facet_grid(~stim_type) +
xlab("Total eBMRQ Score") +
ylab("Change (Post - Pre) in Liking Ratings")
