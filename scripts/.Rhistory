library(tidyverse)
library(psych)
library(EFAtools)
library(ggpubr)
POSDEV <- read.csv(file='../data/POS DEV_March 23, 2023_09.11.csv') %>%
subset(duplicated(PROLIFIC_PID)==FALSE) %>%
subset(Q158 != '55d7e6f669dbc30012b6826e')
#removing 4 duplicates
POSDEV_rolemodel <- read.csv(file='../data/POS DEV Adult Role Model_April 14, 2023_07.16.csv') %>%
subset(Q158 != '55d7e6f669dbc30012b6826e')
#for demo info
POSDEV_demo <- POSDEV[complete.cases(POSDEV[20:56]), ]
table(POSDEV_demo$age)
#Childhood
POSDEV_child_caregiver <- POSDEV %>%
dplyr::select("POS_child1_1":"POS_child37_1") %>%
na.omit() %>%
rename_at(.vars = vars(starts_with("POS_child")),
.funs = funs(sub("POS_child", "", .))) %>%
mutate_if(is.character, as.numeric)
POSDEV_child_friend <- POSDEV %>%
dplyr::select("POS_child67_1":"POS_child85_1", "POS_child66") %>%
subset(POS_child66=="Yes") %>%
na.omit()
POSDEV_child_friend <- POSDEV_child_friend %>%
dplyr::select(-c("POS_child66")) %>%
rename_at(.vars = vars(starts_with("POS_child")),
.funs = funs(sub("POS_child", "", .))) %>%
mutate_if(is.character, as.numeric)
POSDEV_child_rolemodel <- POSDEV_rolemodel %>%
dplyr::select("POS_child3_1":"POS_child26_1", "POS_child1") %>% #columns aren't consecutive in df
subset(POS_child1=="Yes") %>%
na.omit()
POSDEV_child_rolemodel <- POSDEV_child_rolemodel %>%
dplyr::select(-c("POS_child1")) %>%
rename_at(.vars = vars(starts_with("POS_child")),
.funs = funs(sub("POS_child", "", .))) %>%
mutate_if(is.character, as.numeric)
#Adolescence
POSDEV_adol_caregiver <- POSDEV %>%
dplyr::select("POS_adol1_1":"POS_adol37_1") %>%
na.omit() %>%
rename_at(.vars = vars(starts_with("POS_adol")),
.funs = funs(sub("POS_adol", "", .))) %>%
mutate_if(is.character, as.numeric)
POSDEV_adol_friend <- POSDEV %>%
dplyr::select("POS_adol67_1":"POS_adol85_1", "POS_adol66") %>% #columns aren't consecutive in df
subset(POS_adol66=="Yes") %>%
na.omit()
POSDEV_adol_friend <- POSDEV_adol_friend %>%
dplyr::select(-c("POS_adol66")) %>%
rename_at(.vars = vars(starts_with("POS_adol")),
.funs = funs(sub("POS_adol", "", .))) %>%
mutate_if(is.character, as.numeric)
POSDEV_adol_rolemodel <- POSDEV_rolemodel %>%
dplyr::select("POS_adol3_1":"POS_adol26_1", "POS_adol1") %>% #columns aren't consecutive in df
subset(POS_adol1=="Yes") %>%
na.omit()
POSDEV_adol_rolemodel <- POSDEV_adol_rolemodel %>%
dplyr::select(-c("POS_adol1")) %>%
rename_at(.vars = vars(starts_with("POS_adol")),
.funs = funs(sub("POS_adol", "", .))) %>%
mutate_if(is.character, as.numeric)
#remove religious questions
POSDEV_child_rolemodel <- dplyr::select(POSDEV_child_rolemodel, -c("13_1","14_1"))
POSDEV_adol_rolemodel <- dplyr::select(POSDEV_adol_rolemodel, -c("13_1","14_1"))
fa.none <- psych::fa(r=POSDEV_child_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_child_caregiver <- dplyr::select(POSDEV_child_caregiver, -c("15_1","18_1", "20_1", "21_1"))
fa.none <- psych::fa(r=updatePOSDEV_child_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
update2POSDEV_child_caregiver <- dplyr::select(updatePOSDEV_child_caregiver, -c("12_1"))
fa.none <- psych::fa(r=update2POSDEV_child_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation_child_caregiver <- SL_transformation[[2]]
SL_transformation_child_caregiver
SL_transformation_child_caregiver
View(SL_transformation)
SL_transformation[["vars_accounted"]]
SL_transformation[["L2"]]''
SL_transformation[["L2"]]
#extracting factors
#item reduction on three-factor structure
fa.none <- psych::fa(r=POSDEV_adol_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_adol_caregiver <- dplyr::select(POSDEV_adol_caregiver, -c("13_1","21_1", "28_1", "32_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=updatePOSDEV_adol_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
update2POSDEV_adol_caregiver <- dplyr::select(updatePOSDEV_adol_caregiver, -c("30_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=update2POSDEV_adol_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation_adol_caregiver <- SL_transformation[[2]]
SL_transformation_adol_caregiver
#remove items
update3POSDEV_adol_caregiver <- dplyr::select(update2POSDEV_adol_caregiver, -c("14_1", "8_1", "10_1", "11_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=update3POSDEV_adol_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation_adol_caregiver <- SL_transformation[[2]]
SL_transformation_adol_caregiver
#remove items
update4POSDEV_adol_caregiver <- dplyr::select(update3POSDEV_adol_caregiver, -c("17_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=update4POSDEV_adol_caregiver,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation_adol_caregiver <- SL_transformation[[2]]
SL_transformation_adol_caregiver
View(SL_transformation)
SL_transformation[["vars_accounted"]]
#extracting factors
#item reduction on three-factor structure
fa.none <- psych::fa(r=POSDEV_child_friend,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_child_friend <- dplyr::select(POSDEV_child_friend, -c("68_1","73_1", "75_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=updatePOSDEV_child_friend,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation_child_friend <- SL_transformation[[2]]
SL_transformation_child_friend
View(SL_transformation)
SL_transformation[["vars_accounted"]]
#extracting factors
#item reduction on three-factor structure
fa.none <- psych::fa(r=POSDEV_adol_friend,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_adol_friend <- dplyr::select(POSDEV_adol_friend, -c("68_1","74_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=updatePOSDEV_adol_friend,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
update2POSDEV_adol_friend <- dplyr::select(updatePOSDEV_adol_friend, -c("77_1"))
#item reduction on three-factor structure
fa.none <- psych::fa(r=update2POSDEV_adol_friend,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none,type="psych", method="ML")
SL_transformation_adol_friend <- SL_transformation[[2]]
SL_transformation_adol_friend
View(SL_transformation)
SL_transformation[["vars_accounted"]]
#extracting factors
#item reduction on three-factor structure
fa.none <- psych::fa(r=POSDEV_child_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_child_rolemodel <- dplyr::select(POSDEV_child_rolemodel, -c("4_1", "6_1", "7_1", "16_1", "18_1", "19_1"))
fa.none <- psych::fa(r=updatePOSDEV_child_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
update2POSDEV_child_rolemodel <- dplyr::select(updatePOSDEV_child_rolemodel, -c("15_1", "25_1", "21_1"))
fa.none <- psych::fa(r=update2POSDEV_child_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation_child_rolemodel <- SL_transformation[[2]]
SL_transformation_child_rolemodel
#extracting factors
#item reduction on three-factor structure
fa.none <- psych::fa(r=POSDEV_child_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_child_rolemodel <- dplyr::select(POSDEV_child_rolemodel, -c("4_1", "6_1", "7_1", "16_1", "18_1", "19_1"))
fa.none <- psych::fa(r=updatePOSDEV_child_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
update2POSDEV_child_rolemodel <- dplyr::select(updatePOSDEV_child_rolemodel, -c("15_1", "25_1", "21_1"))
fa.none <- psych::fa(r=update2POSDEV_child_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation_child_rolemodel <- SL_transformation[[2]]
SL_transformation_child_rolemodel
View(SL_transformation)
SL_transformation[["vars_accounted"]]
#extracting factors
#item reduction on three-factor structure
fa.none <- psych::fa(r=POSDEV_adol_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax") # no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
updatePOSDEV_adol_rolemodel <- dplyr::select(POSDEV_adol_rolemodel, -c("6_1", "7_1", "8_1", "16_1", "18_1", "19_1", "23_1"))
fa.none <- psych::fa(r=updatePOSDEV_adol_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation <- SL_transformation[[2]]
SL_transformation
#remove items
update2POSDEV_adol_rolemodel <- dplyr::select(updatePOSDEV_adol_rolemodel, -c("15_1"))
fa.none <- psych::fa(r=update2POSDEV_adol_rolemodel,
nfactors = 3,
covar = FALSE, SMC = TRUE,
fm="ml",
max.iter=100,
rotate="promax")# no rotation
summary(fa.none)
SL_transformation <- EFAtools::SL(fa.none, type="psych", method="ML")
SL_transformation_adol_rolemodel <- SL_transformation[[2]]
SL_transformation_adol_rolemodel
SL_transformation_adol_rolemodel
View(SL_transformation)
SL_transformation[["vars_accounted"]]
library(tidyverse)
library(lme4)
library(lmerTest)
library(emmeans)
POSDEV <- read.csv(file='../data/POS DEV_March 23, 2023_09.11.csv') %>%
subset(duplicated(PROLIFIC_PID)==FALSE) #removing 4 duplicates
POSDEV_rolemodel <- read.csv(file='../data/POS DEV Adult Role Model_April 14, 2023_07.16.csv')
#for demo info
POSDEV_demo <- POSDEV[complete.cases(POSDEV[20:56]), ]
table(POSDEV_demo$age)
library(tidyverse)
library(lme4)
library(lmerTest)
library(emmeans)
master_boston <- read.csv(file='../data/master.csv')
master_boston$location = "boston"
master_birkbeck <- read.csv(file='../data/master_Birkbeck.csv')
master_birkbeck$location = "birkbeck"
master <- rbind(master_boston, master_birkbeck) %>%
dplyr::select(ResponseId:PASS_noaud, value:location)
write.csv(master, '../data/master_cleaned.csv')
matched <- read.csv(file='../data/anhedonics_matchedcontrolslong.csv')
matched <- matched %>%
dplyr::select(ResponseId:group, Q409:PASS_noaud, value:location)
write.csv(matched, '../data/matched_clean.csv')
liking_master <- master %>%
subset(rating=="liking")
liking_matched <- matched %>%
subset(rating=="liking")
speech_master <- master %>%
subset(rating=="speech")
speech_matched <- matched %>%
subset(rating=="speech")
#setting contrasts correctly for analyses
speech_master$stim_type <- as.factor(speech_master$stim_type)
speech_master$pre_post <- as.factor(speech_master$pre_post)
contrasts(speech_master$stim_type) <- c(-0.5,0.5)
speech_master$pre_post <- factor(speech_master$pre_post, levels = c("pre", "post"))
contrasts(speech_master$pre_post) <- c(-0.5,0.5)
#for s2s + liking across sample
liking_master$stim_type <- as.factor(liking_master$stim_type)
liking_master$stim <- as.factor(liking_master$stim)
liking_master$pre_post <- as.factor(liking_master$pre_post)
liking_master$pre_post <- factor(liking_master$pre_post, levels = c("pre", "post"))
contrasts(liking_master$stim_type) <- c(-0.5,0.5)
contrasts(liking_master$pre_post) <- c(-0.5,0.5)
speech_matched$pre_post <- factor(speech_matched$pre_post, levels = c("pre", "post"))
speech_matched$stim_type <- as.factor(speech_matched$stim_type)
speech_matched$group <- as.factor(speech_matched$group)
contrasts(speech_matched$stim_type) <- c(-0.5,0.5)
contrasts(speech_matched$group) <- c(0.5,-0.5)
contrasts(speech_matched$pre_post) <- c(-0.5,0.5)
liking_matched$pre_post <- factor(liking_matched$pre_post, levels = c("pre", "post"))
liking_matched$stim_type <- as.factor(liking_matched$stim_type)
liking_matched$group <- as.factor(liking_matched$group)
contrasts(liking_matched$stim_type) <- c(-0.5,0.5)
contrasts(liking_matched$group) <- c(0.5,-0.5)
contrasts(liking_matched$pre_post) <- c(-0.5,0.5)
master$pre_post <- factor(master$pre_post, levels = c("pre", "post"))
masterprepost <- pivot_wider(master, names_from = pre_post, values_from = value)
masterprepost$change <- masterprepost$post - masterprepost$pre
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type*pre_post|ResponseId) + (stim_type*pre_post|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type*pre_post|ResponseId) + (stim_type:pre_post + stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type*pre_post|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type + pre_post|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type + pre_post|ResponseId) + (stim_type|1), control=lmerControl(optimizer="bobyqa"))
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (pre_post|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (1|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (1|ResponseId), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type*pre_post|ResponseId), control=lmerControl(optimizer="bobyqa"))
summary(m1)
#did the s2s illusion work in entire sample?
m1 <- lmer(data=speech_master, scale(value) ~ stim_type*pre_post +  (stim_type*pre_post|ResponseId) + (pre_post|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1)
m2 <- lmer(data=liking_master, scale(value) ~ stim_type*pre_post +  (stim_type*pre_post|ResponseId) + (pre_post|stim), control=lmerControl(optimizer="bobyqa"))
summary(m2)
#how about for anhedonics?
#speech
m1a <- lmer(data=speech_matched, scale(value) ~ stim_type*group + (stim_type*group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1a)
#how about for anhedonics?
#speech
m1a <- lmer(data=speech_matched, scale(value) ~ stim_type*group + (stim_type:group + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1a)
#how about for anhedonics?
#speech
m1a <- lmer(data=speech_matched, scale(value) ~ stim_type*group + (group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1a)
#how about for anhedonics?
#speech
m1a <- lmer(data=speech_matched, scale(value) ~ stim_type*group + (group|ResponseId) + (stim_type|stim),control=lmerControl(optimizer="bobyqa"))
#how about for anhedonics?
#speech
m1a <- lmer(data=speech_matched, scale(value) ~ stim_type*group + (group|ResponseId),control=lmerControl(optimizer="bobyqa"))
summary(m1a)
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group*pre_post|ResponseId) + (1\stim),control=lmerControl(optimizer="bobyqa"))
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group*pre_post|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1b)
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group*pre_post|ResponseId) + (pre_post|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1b)
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group:pre_post + group|ResponseId) + (pre_post|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1b)
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group:pre_post + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1b)
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m1b)
m1b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group|ResponseId),control=lmerControl(optimizer="bobyqa"))
summary(m1b)
m2a <- lmer(data=liking_matched, scale(value) ~ stim_type*group + (stim_type*group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2a)
m2a <- lmer(data=liking_matched, scale(value) ~ stim_type*group + (stim_type:group + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2a)
m2a <- lmer(data=liking_matched, scale(value) ~ stim_type*group + (group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2a)
m2a <- lmer(data=liking_matched, scale(value) ~ stim_type*group + (group|ResponseId),control=lmerControl(optimizer="bobyqa"))
summary(m2a)
m2b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group*pre_post|ResponseId) + (pre_post|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2b)
m2b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group:pre_post + group|ResponseId) + (pre_post|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2b)
m2b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group:pre_post + group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2b)
m2b <- lmer(data=speech_matched, scale(value) ~ group*pre_post + (group|ResponseId) + (1|stim),control=lmerControl(optimizer="bobyqa"))
summary(m2b)
contrasts(speech_master$Q409) <- c(-0.5,0.5)
speech_master$Q409 <- factor(speech_master$Q409, levels = c("Laurel", "Yanny"))
contrasts(speech_master$Q409) <- c(-0.5,0.5)
liking_master$Q409 <- factor(liking_master$Q409, levels = c("Laurel", "Yanny"))
contrasts(liking_master$Q409) <- c(-0.5,0.5)
#and laurel v yanny hearers
m1c <- lmer(data=speech_master, scale(value) ~ Q409*pre_post*stim_type + (Q409 + Q409*pre_post*stim_type|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1c)
#and laurel v yanny hearers
m1c <- lmer(data=speech_master, scale(value) ~ Q409*pre_post*stim_type + (Q409:pre_post:stim_type| + Q409:pre_post + Q409:stim_type + pre_post:stim_type + Q409 + stim_type|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
#and laurel v yanny hearers
m1c <- lmer(data=speech_master, scale(value) ~ Q409*pre_post*stim_type + (Q409:pre_post:stim_type + Q409:pre_post + Q409:stim_type + pre_post:stim_type + Q409 + stim_type|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1c)
#and laurel v yanny hearers
m1c <- lmer(data=speech_master, scale(value) ~ Q409*pre_post*stim_type + (Q409:pre_post:stim_type + Q409:pre_post + Q409:stim_type + Q409 + stim_type|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1c)
#and laurel v yanny hearers
m1c <- lmer(data=speech_master, scale(value) ~ Q409*pre_post*stim_type + (Q409:pre_post:stim_type + Q409:pre_post + Q409:stim_type + Q409|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1c)
#and laurel v yanny hearers
m1c <- lmer(data=speech_master, scale(value) ~ Q409*pre_post*stim_type + (Q409:pre_post + Q409:stim_type + Q409|ResponseId) + (stim_type|stim), control=lmerControl(optimizer="bobyqa"))
summary(m1c)
